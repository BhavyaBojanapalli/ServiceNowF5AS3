<?xml version="1.0" encoding="UTF-8"?>
<record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_209235_f5_as3_applications</collection>
        <condition>current.pending_action != "none"</condition>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>processAS3Change</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
	var f5App = new f5AppHelper();
	var appData = JSON.parse(current.app_data);
	
	// Process Record Operations
	if (current.pending_action == "create") {
		appData.action = 'deploy';
	} else if (current.pending_action == "update") {
		// Exit script if application data has not changed for Update operation
		if (current.app_data == previous.app_data){ return; }
		appData.action = 'deploy';
	} else if (current.pending_action == "delete") {
		//gs.info("I hit delete condition");
		appData.action = 'remove';
	} else { 
		//gs.info("I hit none condition");
		current.pending_action = "none";
		return; 
	}
	
	// Generate AS3 Declaration 
	var template = f5App.getTemplate(appData.template);
	for (var key in appData) {
		if (appData.hasOwnProperty(key)) {
			var re = new RegExp("{{" + key + "}}", "g");
			if (typeof appData[key] === "string") {
				template = template.replace(re, appData[key]);
			} else if (appData[key].constructor === Array || typeof(appData[key]) === "boolean") {
				template = template.replace(re, JSON.stringify(appData[key]));
			}
		}
	}
	current.as3_declaration = template;
	//gs.info(template);
	
	// Set status approval value based on cluster deploy method setting
	var cluster = f5App.getCluster(appData.dsc);
	if (cluster.requires_approval == "0") {
		current.status = "approved";
	} else {
		current.status = "pending";
	}
	
	// Raise AS3 Change Event for API handler
	if (current.status == "approved") {
		//gs.eventQueue(f5App.AS3ChangeEvent, current, current.number, current.pending_action);
		//gs.eventQueue('x_209235_f5_as3.AS3Change', current, current.number, current.pending_action);
	}
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2018-11-07 20:16:25</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>9e82300b37a1230040a1ae7873990ef1</sys_id>
        <sys_mod_count>32</sys_mod_count>
        <sys_name>processAS3Change</sys_name>
        <sys_overrides/>
        <sys_package display_value="F5_AS3" source="x_209235_f5_as3">00ecd5513701230040a1ae7873990e4e</sys_package>
        <sys_policy/>
        <sys_scope display_value="F5_AS3">00ecd5513701230040a1ae7873990e4e</sys_scope>
        <sys_update_name>sys_script_9e82300b37a1230040a1ae7873990ef1</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2018-11-13 16:24:24</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=9e82300b37a1230040a1ae7873990ef1"/>
</record_update>
